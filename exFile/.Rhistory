fit <- growth(model, data = data.growth)
summary(fit,fit.measures=TRUE)
MS.wider
MS.all
# 자부심 RM ANOVA
EST.all
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = FALSE) %>%
get_anova_table()
print(rating.anova)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = FALSE) %>%
get_anova_table()
print(EST.anova)
EST.pwc <- EST.all %>%
# group_by(Orientation) %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.all
EST.pwc <- EST.all %>%
# group_by(Orientation) %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE)
EST.anova
EST.all
print(EST.anova)
EST.pwc <- EST.all %>%
emmeans_test(EST~Y_Y)
EST.anova
EST.all
View(EST.all)
EST.anova
table(EST.all$ID, EST.all$Y_Y)
table(EST.all$Y_Y, EST.all$ID)
# 사후분석
EST.pwc <- EST.all %>%
# group_by(Orientation) %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = FALSE) %>%
get_anova_table()
EST.anova
View(EST.wider)
data.EST
View(DMS.wider)
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID != "20158369")
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = FALSE) %>%
get_anova_table()
EST.anova
EST.pwc <- EST.all %>%
# group_by(Orientation) %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
emmeans_test(EST ~ Y_Y)
EST.pwc
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table()
EST.anova
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
mutate(MSW = SSn/DFn,
MSB = SSd/DFd)
EST.anova
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as.data.frame() %>%
mutate(MSW = SSn/DFn,
MSB = SSd/DFd)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as.data.frame()
EST.anova
EST.anova %>%
mutate(MSW = SSn/DFn,
MSB = SSd/DFd)
EST.anova %>%
mutate(MSW = SSn/DFn)
View(EST.anova)
colnames(EST.anova)
class(EST.anova)
View(EST.anova)
EST.anova$DFn
EST.anova$DFn/EST.anova$SSd
EST.anova %>%
mutate(MSW = SSn)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as.tibble() %>%
mutate(MSW = SSn)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSW = SSn)
EST.anova
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSW = SSn/DFn,
MSB = SSd/DFd)
EST.anova
EST.anova$MSB/EST.anova$MSW
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSW = SSn/DFn,
MSB = SSd/DFd,
F2 = MSB/MSW)
EST.anova
View(EST.anova)
7.722064e-05
805.387/16.613
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd,
F2 = MSB/MSW)
View(EST.anova)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd)
EST.anova
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd) %>%
select(Effect, DFn, DFd, MSB, MSW, `F`, p, pes)
View(EST.anova)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table() %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd) %>%
filter(Effect != "(Intercept)") %>%
select(Effect, DFn, DFd, MSB, MSW, `F`, p, pes)
View(EST.anova)
View(EST.anova)
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table(correction = "GG") %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd) %>%
filter(Effect != "(Intercept)") %>%
select(Effect, DFn, DFd, MSB, MSW, `F`, p, pes)
EST.anova
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y)
View(EST.wider)
EST.wider %>%
na.omit()
EST.wider %>%
filter(is.na())
EST.wider %>%
filter_all(any_vars(!is.na(.)))
EST.wider %>%
filter_all(any_vars(is.na(.)))
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID == "20158369")
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID != "20158369")
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST)
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID != "20158369")
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID != "20158369") %>%
as.data.frame()
View(EST.all)
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
View(EST.all)
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
filter(ID != "20158369") %>%
as_tibble()
View(EST.all)
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST)
EST.pwc <- EST.all %>%
emmeans_test(EST~Y_Y)
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST) %>%
arragne(desc(ID))
EST.all2 <- EST.all %>%
arrange(desc(ID))
View(EST.all2)
EST.all %>% filter(ID == 20178017)
EST.all %>% filter(ID == 20178016)
data.main <- data.raw %>%
filter(Y_P == 1) %>%
arrange(desc(ID))
IV.all <- data.main %>%
drop_na(EST) %>%
select(ID, GEN, Y_Y, FC_N, G_1, LEAG_T1, LI_N, CLC_N, CG) %>%
filter(Y_Y == 2018) %>%
mutate(GEN = factor(GEN, levels = c(1,2), labels = c("남자", "여자"))) %>%
mutate(CG = ifelse(CG == 5, 0, 1)) # 미결정은 0, 결정은 1
# 자부심
EST.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, EST)
EST.all2 <- EST.all %>%
arrange(desc(ID))
# 자부심 RM ANOVA
EST.anova <- anova_test(data=EST.all,
dv = "EST", within = "Y_Y", wid =  "ID",
effect.size = "pes", detailed = TRUE) %>%
get_anova_table(correction = "GG") %>%
as_tibble() %>%
mutate(MSB = SSn/DFn,
MSW = SSd/DFd) %>%
filter(Effect != "(Intercept)") %>%
select(Effect, DFn, DFd, MSB, MSW, `F`, p, pes)
EST.anova
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
# tmp.wider <- pivot_wider(data = tmp, names_from = Y_Y, values_from = c(EST, G_1), names_sep = ".")
EST.wider <- pivot_wider(data = EST.all, names_from = Y_Y, values_from = EST, names_sep = ".") %>%
rename(EST2018 = `2018`,
EST2019 = `2019`,
EST2020 = `2020`)
SY.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, SY)
SY.wider <- pivot_wider(data = SY.all, names_from = Y_Y, values_from = SY, names_sep = ".") %>%
rename(SY2018 = `2018`,
SY2019 = `2019`,
SY2020 = `2020`)
# 전공만족도
MS.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, MAJ_S)
MS.wider <-  pivot_wider(data = MS.all, names_from = Y_Y, values_from = MAJ_S, names_sep = ".") %>%
rename(MS2018 = `2018`,
MS2019 = `2019`,
MS2020 = `2020`)
# 복수 전공 만족도
DMS.all <- data.main %>%
drop_na(EST) %>%
select(ID, Y_Y, DM_S)
DMS.wider <-  pivot_wider(data = DMS.all, names_from = Y_Y, values_from = DM_S, names_sep = ".") %>%
rename(DMS2018 = `2018`,
DMS2019 = `2019`,
DMS2020 = `2020`)
# merge to EST.wider
data.growth <- left_join(EST.wider, MS.wider, by="ID")
data.growth <- left_join(data.growth, DMS.wider, by="ID")
data.growth <- left_join(data.growth, SY.wider, by = "ID")
data.growth <- left_join(data.growth, IV.all, by = "ID") %>%
na.omit()
# Visualization
require(ggpubr)
ggline(EST.all, x="Y_Y", y="EST",
add = "mean_se",
xlab = "연도",
ylab = "자부심",
legend = "right")
# latent growth model -----------------------------------------------------
require(lavaan)
require(semPlot)
model <- '
# intercept and slope with fixed coefficients
i =~ 1*EST2018 + 1*EST2019 + 1*EST2020
s =~ 0*EST2018 + 1*EST2019 + 2*EST2020
# regressions
i ~ GEN + FC_N + G_1 + LEAG_T1 + LI_N + CLC_N + CG
s ~ GEN + FC_N + G_1 + LEAG_T1 + LI_N + CLC_N + CG
# time-varying covariates
EST2018 ~ MS2018+DMS2018+SY2018
EST2019 ~ MS2019+DMS2019+SY2019
EST2020 ~ MS2020+DMS2020+SY2020
'
# fit model
fit <- growth(model, data = data.growth)
summary(fit,fit.measures=TRUE)
EST.pwc <- EST.all %>%
t_test(EST ~ Y_Y, paired = TRUE, detailed = FALSE) %>%
adjust_pvalue(method = "none") %>%
select(-df, -statistic) # Remove details
print(EST.anova)
rm(list=ls())
# 필요한 라이브러리 ---------------------------------------------------------------
require(dplyr)
require(tidyr)
require(data.table)
# 0. 디렉토리 세팅 --------------------------------------------------------------
# mac
# fdir <- "/Volumes/GoogleDrive/내 드라이브/R/exFile/"
# window
fdir <- "D:/Google Drive/R/exFile"
setwd(fdir)
# 1.  자료 읽기 ---------------------------------------------------------------
# 파일 목록 확인
flist <- list.files()
# 파일 출력
flist[1]
# 자료 읽기-.xlsx(Excel)
require(readxl)
data1 <- read_excel(flist[1])
# 자료 읽기-.csv
data2 <- read.csv(flist[2])
data3 <- fread(flist[2]) # 한글이 깨질 수 있음 -> 영어로 된 파일을 읽을 때 사용
# 데이터 확인 ------------------------------------------------------------------
# 행(표본 수), 열(데이터의 수) 확인
dim(data1) # 순서1. dim을 이용한 다변량 데이터의 행수 열수 확인
colnames(data1) # 순서2. colnames을 이용한 변수명 확인
head(data1,3) # 순서3. head을 이용한 첫 세 줄 표시
# 히스토그램 그리기
library(lattice) #패키지 lattice 입력
histogram(~age,data=data1,breaks=10,type="count")
# 나이 변환
data1$ageN <- as.numeric(gsub("[^\\d]+", "", data1$age, perl=TRUE)) # gsub?
data1 <- data1[, colnames(data1) != "ageN"]
colnames(data1)
# 다른 방법
data1 <- data1 %>%
mutate(ageN = as.numeric(gsub("[^\\d]+", "", data1$age, perl=TRUE)))
# 다시 히스토그램 그려보기
histogram(~ageN,data=data1,breaks=10,type="count")
#대푯값의 산출
mean(data1$ageN, na.rm = T) #나이의 평균값
median(data1$ageN, na.rm = T) #나이의 중앙값　
names(table(data1$ageN))[which(table(data1$ageN) == max(table((data1$ageN))))] # 나이의 최빈값
# using dplyr
summary(data1$ageN)
# 분산 지표 계산
sd(data1$ageN, na.rm = T) #나이의 SD
var(data1$ageN, na.rm = T) #나이의 분산
# 평균 중심화 (개별값 - 평균)
data1$ageN-mean(data1$ageN, na.rm = T)
# round(mean(data1$ageN-mean(data1$ageN, na.rm = T), na.rm = T), 4)
# using dplyr
data1 <- data1 %>%
mutate(ageC = ageN-mean(ageN, na.rm = T))
data1$ageC
# 결측값 제거 ------------------------------------------------------------------
require(rstatix)
data1 <- data1 %>%
drop_na() %>% # NA가 있는 모든 행 삭제
convert_as_factor(gender) # convert as factor: easy method to make factor
dim(data1)
# 집단별 히스토그램 ---------------------------------------------------------------
histogram(~ageN|gender,data=data1,breaks=15)
#집단 사이의 분포 비교
tapply(data1$ageN,data1$gender, mean) #성별 '협동성'의 평균값을 구한다
tapply(data1$ageN,data1$gender, sd) #성별 '협동성'의 SD를 구한다
# using dplyr
data1 %>%
group_by(gender) %>%
summarise(age.mean = mean(ageN),
age.sd = sd(ageN))
#상자 그림
boxplot(data1$ageN,horizontal=TRUE) #'기능'의 상자수염도를 가로 방향으로 작성한다(horizontal=FALSE는 세로 방향)
boxplot(ageN~gender,data=data1,horizontal=TRUE) #성별로 '협동성'의 상자수염도를 그린다
# 성별 명명 -------------------------------------------------------------------
data1$genderF <- factor(data1$gender, levels = c(1,2), labels = c("male", "female"))
# using dplyr
data1 <- data1 %>%
mutate(genderF = factor(gender, levels = c(1,2), labels = c("male", "female")))
table(data1$genderF)
# paste0(round(table(data1$genderF)/sum(table(data1$genderF))*100, 2), "%")
histogram(~ageN|genderF,data=data1,breaks=15)
# Filtering ---------------------------------------------------------------
# 남성만 추출
data1M <- subset(data1, genderF=="male")#남성 데이터만 추출한다
table(data1M$genderF)
# 남성이 아닌 참가자 추출(≒여성 추출)
data1F <- subset(data1, genderF!="male")#남성 데이터만 추출한다
table(data1F$genderF)
# dplyr
rm(data1M)
data1M <- data1 %>%
filter(genderF == "male")
table(data1M$genderF)
# 20대 남성만 추출
data1M <- data1 %>%
filter(genderF == "male" & (ageN >= 20 & ageN < 30))
table(data1M$genderF)
# 결측치가 있는 열을 추출하고 싶다면?
data1 %>%
filter_all(any_vars(is.na(.)))
# 분석을 위한 지표 계산 ------------------------------------------------------------
colnames(data1)
# 성별, 나이, IGD, MOT 변수만 남기기
data1.anal <- data1 %>%
# select(c(genderF, ageN, grepl("IGD")))
select(genderF, ageN|contains("IGD")|contains("MOT"))
data1.anal <- data1.anal %>%
mutate(IGD.sum1 = IGD1+IGD2+IGD3+IGD4+IGD5+IGD6+IGD7+IGD8+IGD9+IGD10+
IGD11+IGD12+IGD13+IGD14+IGD15+IGD16+IGD17+IGD18+IGD19+IGD20+
IGD21+IGD22+IGD23+IGD24) %>% # method1
mutate(IGD.sum2 = select(., IGD1:IGD24) %>% rowSums()) # method 2
c(mean(data1.anal$IGD.sum1), mean(data1.anal$IGD.sum2))
# 열 제거
data1.anal <- data1.anal %>%
select(-IGD.sum2) %>%
rename(IGD.sum = IGD.sum1,
gender = genderF,
age = ageN)
# 게임 이용 동기 점수 계산
# AGGR: 공격동기
# ACHI: 성취동기
# ESP: 현실도피동기
data1.anal <- data1.anal %>%
mutate(MOT.AGGR = rowMeans(select(., c("MOT1", "MOT2", "MOT4", "MOT7")), na.rm = TRUE),
MOT.ACHI = rowMeans(select(., c("MOT3", "MOT5", "MOT6", "MOT11", "MOT12", "MOT13")), na.rm = TRUE),
MOT.ESP = rowMeans(select(., c("MOT8", "MOT9", "MOT10", "MOT14")), na.rm = TRUE))
data1.anal <- data1.anal %>%
select(gender, age, IGD.sum, MOT.AGGR, MOT.ACHI, MOT.ESP)
data1 %>%
filter_all(any_vars(is.na(.)))
data1 <- data1 %>%
mutate(ageC = ageN-mean(ageN, na.rm = T))
data1$ageC
# 결측값 제거 ------------------------------------------------------------------
require(rstatix)
# 결측치만 있는 행만 추출하고 싶다면?
data1 %>%
filter_all(any_vars(is.na(.)))
data1 <- read_excel(flist[1])
data1 %>%
filter_all(any_vars(is.na(.)))
flist
data1 <- read_excel(flist[1])
View(data1)
View(data3)
View(data1)
